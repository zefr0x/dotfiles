# Languages Config

[[language]]
name = "c"
language-servers = ["clangd", "harper-ls"]

[[language]]
name = "cpp"
language-servers = ["clangd", "harper-ls"]


[[language]]
name = "python"
language-servers = ["ruff", "pylsp", "harper-ls"]
auto-format = true


[[language]]
name = "rust"
language-servers = ["rust-analyzer", "harper-ls"]


[[language]]
name = "latex"
# TODO: Add harper-ls when supported.
language-servers = ["texlab"]


[[language]]
name = "typst"
language-servers = ["tinymist", "harper-ls"]


[[language]]
name = "git-commit"
language-servers = ["harper-ls"]


[[language]]
name = "lua"
language-servers = ["lua-language-server", "harper-ls"]


[[language]]
name = "javascript"
shebangs = ["deno"]
roots = ["deno.json", "deno.jsonc", "package.json"]
file-types = ["js"]
language-servers = ["deno-lsp", "harper-ls"]
auto-format = true

[[language]]
name = "typescript"
shebangs = ["deno"]
roots = ["deno.json", "deno.jsonc", "package.json"]
file-types = ["ts"]
language-servers = ["deno-lsp", "harper-ls"]
auto-format = true

[[language]]
name = "jsx"
shebangs = ["deno"]
roots = ["deno.json", "deno.jsonc", "package.json"]
file-types = ["jsx"]
language-servers = ["deno-lsp", "harper-ls"]
auto-format = true

[[language]]
name = "tsx"
shebangs = ["deno"]
roots = ["deno.json", "deno.jsonc", "package.json"]
file-types = ["tsx"]
language-servers = ["deno-lsp", "harper-ls"]
auto-format = true


[[language]]
name = "html"
# TODO: Consider using SuperHTML.
language-servers = ["vscode-html-language-server", "harper-ls"]
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "html"] }
auto-format = true


[[language]]
name = "css"
language-servers = ["vscode-css-language-server", "harper-ls"]
formatter = { command = "deno", args = ["fmt", "-", "--ext", "css"] }
auto-format = true


[[language]]
name = "scss"
language-servers = ["vscode-css-language-server", "harper-ls"]


[[language]]
name = "json"
language-servers = ["vscode-json-language-server", "harper-ls"]
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "json"] }
auto-format = true


[[language]]
name = "jsonc"
language-servers = ["vscode-json-language-server", "harper-ls"]
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "jsonc"] }
auto-format = true


[[language]]
name = "toml"
language-servers = ["taplo", "harper-ls"]
auto-format = true


[[language]]
name = "yaml"
language-servers = ["yaml-language-server", "harper-ls"]


[[language]]
name = "markdown"
language-servers = ["harper-ls"]
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "md"] }
auto-format = true


# Language Servers Config

[language-server.harper-ls]
command = "harper-ls"
args = ["--stdio"]


[language-server.rust-analyzer.config]
check = { command = "clippy" }


[language-server.lua-language-server.config.Lua]
runtime.version = "LuaJIT"
workspace.checkThirdParty = false
telemetry.enable = false


[language-server.deno-lsp]
command = "deno"
args = ["lsp"]
environment = { NO_COLOR = "1" }

[language-server.deno-lsp.config.deno]
enable = true
suggest = { completeFunctionCalls = false, imports = { hosts = { "https://deno.land" = true } } }
inlayHints.parameterNames.enabled = "all"
inlayHints.parameterTypes.enabled = true
inlayHints.variableTypes.enabled = true
inlayHints.propertyDeclarationTypes.enabled = true
inlayHints.functionLikeReturnTypes.enabled = true
inlayHints.enumMemberValues.enabled = true


[language-server.yaml-language-server.config.yaml]
format.enable = true
validation = true
